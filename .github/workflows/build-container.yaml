name: Build and Push Docker Image

on:
  push:
    branches:
      - main # Trigger the action on push to the 'main' branch
  pull_request:
    branches:
      - main # Trigger the action on pull requests to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Check out the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to GitHub Container Registry (GHCR)
    - name: Log in to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }} # GitHub automatically provides this secret for authentication

    # Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t ghcr.io/${{ github.repository }}:latest .

    # Push the Docker image to GHCR
    - name: Push Docker image to GHCR
      run: |
        docker push ghcr.io/${{ github.repository }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Set up AWS credentials for CloudFormation deployment
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change to your AWS region

      # Update CloudFormation stack
      - name: Update CloudFormation Stack
        run: |
          STACK_NAME=travel-planner-stack
          # Create or update the CloudFormation stack to deploy ECS resources
          aws cloudformation deploy \
            --template-file cloudformation-template.yml \
            --stack-name $STACK_NAME \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides ImageUrl=ghcr.io/${{ github.repository }}:${{ github.sha }}

          # Wait for ECS service to be updated
          aws ecs update-service \
            --cluster travel-planner-cluster \
            --service travel-planner-service \
            --task-definition travel-planner-task \
            --force-new-deployment