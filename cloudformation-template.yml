AWSTemplateFormatVersion: '2010-09-09'
Resources:
  # Define the ECS Task Execution Role with necessary permissions
  ecsTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ECSExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetRepositoryPolicy"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"

  # Define an ECR Repository
  MyAppECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: travel-planner-repo

  # Define an ECS Cluster
  MyAppECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: travel-planner

  # Define the ECS Task Definition
  MyAppTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: travel-planner-task
      ExecutionRoleArn: arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole
      ContainerDefinitions:
        - Name: travel-planner-container
          Image: !Sub "ghcr.io/notenoughauth/travel-planner:latest"
          Memory: 512
          Cpu: 256
          Essential: true

  # Define the ECS Service
  MyAppService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref MyAppECSCluster
      TaskDefinition: !Ref MyAppTaskDefinition
      DesiredCount: 1
      LaunchType: EC2
      LoadBalancers:
        - ContainerName: travel-planner-container
          ContainerPort: 80
          TargetGroupArn: arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:targetgroup/travel-planner-target-group/1234567890abcdef
